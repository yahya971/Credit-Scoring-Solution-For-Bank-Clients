input{
	jdbc{
	jdbc_connection_string => "jdbc:postgresql://127.0.0.1:5432/Biat_Client_Scorer_DataWarehouse?"
	jdbc_user => "postgres"
	jdbc_password => "root"
	jdbc_driver_class => "org.postgresql.Driver"
	schedule => "* * * * *"
	statement => 'select public."CLIENT_SCORE"."CODE_CLIENT", "SCORE_CLIENT" , "ID_ACCOUNT" , "RECID_" , "REF_CREDIT_" , "DATE_GENERATION_" , "MONTANT_" , "NBR_MVT" , "NAME_LASTNAME" , "DESCRIPTION" , "LOCATION" , "CONNECTIONS" , "JOB_TITLE" , "COMPANY_NAME" , "JOB_DURATION" , "COLLEGES" , "DEGREES" , "CERTIFICATIONS" , "FLAGGED" , "TIMESTAMP" , "EMAIL" , "DURATION" , "PROFILE_LINK"  from public."CLIENT_SCORE" 
LEFT JOIN public."DATA_ACCOUNT" on public."CLIENT_SCORE"."DATA_ACCOUNT_PK" = public."DATA_ACCOUNT"."DATA_ACCOUNT_PK"
LEFT JOIN public."DATA_CUSTOMER" on public."CLIENT_SCORE"."CODE_CLIENT" = public."DATA_CUSTOMER"."CODE_CLIENT"
LEFT JOIN public."DATA_NBR_MVT" on public."CLIENT_SCORE"."DATA_NBR_MVT_PK" = public."DATA_NBR_MVT"."DATA_NBR_MVT_PK" 
LEFT JOIN public."DATA_CREDIT" on public."CLIENT_SCORE"."DATA_CREDIT_PK" = public."DATA_CREDIT"."DATA_CREDIT_PK" ; '    type => "accounts_information"
	}
}

filter {
    mutate {
       convert => ["id_account" , "string"]
       }
    
}




output {
    elasticsearch {
        index => "client_score_data_warehouse"
        hosts => "localhost:9200"
        document_id => "users_%{code_client}"
        doc_as_upsert => true
    }
}